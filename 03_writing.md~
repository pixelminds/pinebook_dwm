# A keyboard-centric workflow with PineBook Pro

## The writing tools

The central piece of software in a writing workflow is, of course, the text processor. 

I'm not going to even try a new episode of the vim/emacs battle here, but I must admit I've been struggling with all the workflow concerns found in this field: the feel of the writing environment, productive typing, connections to other tools, familiar key bindings, and of course the helper tools like syntax highlighting, spell checking, and grep pattern search. Needless to say, vim is one of the preferred text editors for developers, but it's not as popular for writers. Emacs has been installed and removed multiple times on my laptops. It's simply not a plain text editor, and that makes it unfit to my purpose (besides the two-handed shortcuts). But there's other options out there if you need some smart sophistication. Editors like Gedit, Kate or Geany are surprisingly efficient and well designed. If you look for a CLI editor, then nano is another great alternative to vim. But as soon as you start digging in all the shortcuts and hidden mysteries of vim, you're lost and caught in its tentacles, and discover an incredible ecosystem of utilities based on vim key bindings, and a huge crowd of developers working on ports of these key bindings to other software, including Emacs, Sublimetext, or even mainstream browsers like Chrome or Firefox. The only big learning effort is about building some sort of muscle memory for the main key bindings. From then on, everything starts to get smooth, productive, and as dry as expected. I'm sharing all the key bindings of selected software in a separate repository (mysetup_cheatsheets), in case you find the need.

Writers also need some more tools for their everyday routines. It's not all just about editing text. Here's a basic list of tools I use in my setup to cover these side routines:

- Doing research - w3m is a very good web browser for the terminal with vim bindings. A good alternative with a more graphic approach is elinks, but keybindings are probably going to be a bit of extra learning. In my case, vim bindings are a must, so I'm sticking to w3m.
- As a shortcut to the browser and other searchable stuff, I just discovered a small great tool called surfraw, which you can invoke from the CLI to search from more than a hundred different sources.
- Communicating by email - aerc is one of the best CLI email clients out there, also included in the vim ecosystem.
- Communicating in real time - iirc is a great tool to chat with colleagues and debate groups.
- Keeping versions of your writings is not a minor thing. Despite being a developer tool, git is simply the best versioning system.
- Translating - translating is a whole job in itself. Professional translator tools are very well documented in TranslateOnLinux.
